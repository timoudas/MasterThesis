ex2 <- ex1[3:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("Emplyment", "Productivity", "Real Wages", "Unemplyment") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("Unemployment",
"Real Wages",
"Productivity",
"Employment"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
scale_y_continuous(limits = c(-6,8), breaks = seq(-6,8, by = 2)) +
scale_fill_manual(name = NULL,
values = c(Unemployment = "#FFc000",  # yellow
`Real Wages` = "#A4A4A4",  # grey
Productivity = "#EC7C30",  # orange
Employment = "#5E99CE")) + # blue
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
molten.ex$variable <- factor(molten.ex$variable, levels = c("Unemployment",
"Real Wages",
"Productivity",
"Employment"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
scale_y_continuous(limits = c(-6,8), breaks = seq(-6,8, by = 2)) +
scale_fill_manual(name = NULL,
values = c(Unemployment = "#FFc000",  # yellow
`Real Wages` = "#A4A4A4",  # grey
Productivity = "#EC7C30",  # orange
Employment = "#5E99CE")) + # blue
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex
HD <- VARhd(model)
ex <- HD[,,1]
ex
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("CLIF",
"BNP",
"CPI",
"INT"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
scale_y_continuous(limits = c(-6,8), breaks = seq(-6,8, by = 2)) +
scale_fill_manual(name = NULL,
values = c(Unemployment = "#FFc000",  # yellow
`Real Wages` = "#A4A4A4",  # grey
Productivity = "#EC7C30",  # orange
Employment = "#5E99CE")) + # blue
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
molten.ex$variable <- factor(molten.ex$variable, levels = c("CLIF",
"BNP",
"CPI",
"INT"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
scale_y_continuous(limits = c(-6,8), breaks = seq(-6,8, by = 2)) +
scale_fill_manual(name = NULL,
values = c(Unemployment = "#FFc000",  # yellow
`Real Wages` = "#A4A4A4",  # grey
Productivity = "#EC7C30",  # orange
Employment = "#5E99CE")) + # blue
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex
ex2$Period
molten.ex$variable
molten.ex$variable
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
scale_y_continuous(limits = c(-6,8), breaks = seq(-6,8, by = 2)) +
scale_fill_manual(name = NULL,
values = c(CLIF = "#FFc000",  # yellow
`BNP` = "#A4A4A4",  # grey
CPI = "#EC7C30",  # orange
INT = "#5E99CE")) + # blue
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
HD <- VARhd(model)
ex <- HD[,,1]
ex
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("CLIF",
"BNP",
"CPI",
"INT"))
molten.ex$variable
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
scale_y_continuous(limits = c(-6,8), breaks = seq(-6,8, by = 2)) +
scale_fill_manual(name = NULL,
values = c(CLIF = "#FFc000",  # yellow
`BNP` = "#A4A4A4",  # grey
CPI = "#EC7C30",  # orange
INT = "#5E99CE")) + # blue
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex <- HD[,,2]
ex
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("CLIF",
"BNP",
"CPI",
"INT"))
molten.ex$variable
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
scale_y_continuous(limits = c(-6,8), breaks = seq(-6,8, by = 2)) +
scale_fill_manual(name = NULL,
values = c(CLIF = "#FFc000",  # yellow
`BNP` = "#A4A4A4",  # grey
CPI = "#EC7C30",  # orange
INT = "#5E99CE")) + # blue
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex <- HD[,,3]
ex
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("CLIF",
"BNP",
"CPI",
"INT"))
molten.ex$variable
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
scale_y_continuous(limits = c(-6,8), breaks = seq(-6,8, by = 2)) +
scale_fill_manual(name = NULL,
values = c(CLIF = "#FFc000",  # yellow
`BNP` = "#A4A4A4",  # grey
CPI = "#EC7C30",  # orange
INT = "#5E99CE")) + # blue
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex <- HD[,,4]
ex
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("CLIF",
"BNP",
"CPI",
"INT"))
molten.ex$variable
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
scale_y_continuous(limits = c(-6,8), breaks = seq(-6,8, by = 2)) +
scale_fill_manual(name = NULL,
values = c(CLIF = "#FFc000",  # yellow
`BNP` = "#A4A4A4",  # grey
CPI = "#EC7C30",  # orange
INT = "#5E99CE")) + # blue
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex <- HD[,,4]
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("CLIF",
"BNP",
"CPI",
"INT"))
molten.ex$variable
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
scale_y_continuous(limits = c(-6,8), breaks = seq(-6,8, by = 2)) +
scale_fill_manual(name = NULL,
values = c(CLIF = "#FFc000",  # yellow
`BNP` = "#A4A4A4",  # grey
CPI = "#EC7C30",  # orange
INT = "#5E99CE")) + # blue
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
scale_y_continuous(limits = c(-6,8), breaks = seq(-6,8, by = 2)) +
scale_fill_manual(name = NULL,
values = c(CLIF = "#FFc000",  # yellow
`BNP` = "#A4A4A4",  # grey
CPI = "#EC7C30",  # orange
INT = "#5E99CE")) + # blue
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("CLIF",
"BNP",
"CPI",
"INT"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
molten.ex$variable <- factor(molten.ex$variable, levels = c("INT",
"CPI",
"BNP",
"CLIF"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex <- HD[,,1]
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("INT",
"CPI",
"BNP",
"CLIF"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex <- HD[,,2]
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("INT",
"CPI",
"BNP",
"CLIF"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex <- HD[,,1]
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("INT",
"CPI",
"BNP",
"CLIF"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex <- HD[,,2]
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("INT",
"CPI",
"BNP",
"CLIF"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex <- HD[,,3]
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("INT",
"CPI",
"BNP",
"CLIF"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
ex <- HD[,,4]
ex1 <- as.data.frame(ex) # transforming the HD matrix as data frame #
ex2 <- ex1[4:84,1:4] # taking our the first 2 rows as they are N/As #
colnames(ex2) <- c("CLIF", "BNP", "CPI", "INT") # renaming columns #
ex2$Period <- 1:nrow(ex2) # creating an id column #
col_id <- grep("Period", names(ex2)) # setting the new variable as id #
ex3 <- ex2[, c(col_id, (1:ncol(ex2))[-col_id])] # moving id variable to the first column #
molten.ex <- melt(ex3, id = "Period") # melting the data frame #
molten.ex$variable <- factor(molten.ex$variable, levels = c("INT",
"CPI",
"BNP",
"CLIF"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity", width = 0.6) +
guides(fill = guide_legend(reverse = TRUE)) +
# Making the R plot look more like excel for comparison...
theme(rect = element_blank(),
panel.grid.major.y = element_line(colour = "#DADADA"),
legend.position  = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.key.size = unit(3, "mm"))
ggplot(molten.ex, aes(x = Period, y = value, fill = variable)) +
geom_bar(stat = "identity") +
guides(fill = guide_legend(reverse = TRUE))
fevdplot(model, 24)
fevdplot(model,n.ahead=24)
fevd(model, n.ahead=24)
plot(fevd(model, n.ahead=24))
plot(fevd(model, n.ahead=24))
fevd(model, n.ahead=24)
plot(fvd[,1])
fvd <- fevd(model, n.ahead=24)
plot(fvd[,1])
plot(fvd[1])
plot(fvd[, 'CPI'])
plot(fvd[, 'CLIF'])
fvd[, 'CLIF']
fvd[ ,'CLIF']
fvd[ ,1]
fvd[1]
fvd$CLIF
plot(fvd$CLIF)
